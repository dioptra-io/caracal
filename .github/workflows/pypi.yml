name: PyPI

on:
  push:
    branches: [ main ]
    tags: [ '*' ]
    paths-ignore: [ '**.md' ]
  pull_request:

jobs:
  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: dioptra-io/publish-python-action@v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}
          upload: ${{ startsWith(github.ref, 'refs/tags/v') }}
          wheel: false

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ "x86_64", "aarch64" ]
        build: [ "cp38-*", "cp39-*", "cp310-*" ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.conan/data
          key: ${{ runner.os }}-${{ matrix.arch }}-${{ matrix.build }}
      - uses: actions/setup-python@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Build wheels
        uses: pypa/cibuildwheel@2.6.0
        env:
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_BUILD: ${{ matrix.build }}
          CIBW_ENVIRONMENT: CONAN_USER_HOME=/host/home/runner
        with:
          output-dir: dist
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: dist/*.whl
      - uses: dioptra-io/publish-python-action@v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}
          upload: ${{ startsWith(github.ref, 'refs/tags/v') }}
          sdist: false
          wheel: false

  macos:
    runs-on: macos-10.15
    strategy:
      matrix:
        # arch: [ "x86_64", "arm64" ]
        # libpcap error on cross-compiled binaries:
        # RuntimeError: live packet capture not supported on this system
        arch: [ "x86_64" ]
        build: [ "cp38-*", "cp39-*", "cp310-*" ]
        include:
          - arch: "x86_64"
            conan_arch: "x86_64"
          # - arch: "arm64"
          #   conan_arch: "armv8"
          # For some reasons there are multiple Python versions installed on macOS:
          # Xcode, GitHub Actions, ... So we have to give a hint to CMake to find
          # the right version.
          - build: "cp38-*"
            python_root_dir: "/Library/Frameworks/Python.framework/Versions/3.8/"
          - build: "cp39-*"
            python_root_dir: "/Library/Frameworks/Python.framework/Versions/3.9/"
          - build: "cp310-*"
            python_root_dir: "/Library/Frameworks/Python.framework/Versions/3.10/"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.conan/data
          key: ${{ runner.os }}-${{ matrix.arch }}-${{ matrix.build }}
      - uses: actions/setup-python@v3
      - name: Build wheels
        uses: pypa/cibuildwheel@2.6.0
        env:
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_BUILD: ${{ matrix.build }}
          CONAN_ARCH: ${{ matrix.conan_arch }}
          CMAKE_OSX_ARCHITECTURES: ${{ matrix.arch }}
          MACOSX_DEPLOYMENT_TARGET: 10.15
          PYTHON_ROOT_DIR: ${{ matrix.python_root_dir }}
        with:
          output-dir: dist
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: dist/*.whl
      - uses: dioptra-io/publish-python-action@v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}
          upload: ${{ startsWith(github.ref, 'refs/tags/v') }}
          sdist: false
          wheel: false
