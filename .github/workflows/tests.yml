name: Tests

on:
  push:
    branches: [ main ]
    paths-ignore: [ '**.md' ]
  pull_request:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker image
        run: docker build --tag caracal .
      - name: Test Docker image
        run: docker run caracal --help

  nix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
      - uses: cachix/cachix-action@v10
        with:
          name: ${{ secrets.CACHIX_NAME }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Build flake
        run: nix build

  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.conan/data
          key: ${{ runner.os }}-x86_64
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install --yes build-essential cmake gcovr git ninja-build python3-dev python3-pip
          pip3 install conan
      - name: Configure project
        run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-fprofile-arcs -ftest-coverage -fsanitize=address -fsanitize=undefined"
      - name: Build tests
        run: cmake --build build --target caracal-test
      - name: Run tests
        run: sudo --preserve-env=CI build/caracal-test --benchmark-warmup-time 0 --benchmark-samples 1
      - name: Compute coverage
        run: gcovr --exclude-unreachable-branches --exclude-throw-branches --exclude apps --exclude extern --exclude tests --output coverage.xml --xml
      - uses: codecov/codecov-action@v3

  macos:
    # bison fails to build on macos-11 on GitHub actions.
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.conan/data
          key: ${{ runner.os }}-x86_64
      - name: Install dependencies
        run: brew install cmake conan gcovr ninja
      - name: Configure project
        run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-fprofile-arcs -ftest-coverage -fsanitize=address -fsanitize=undefined"
      - name: Build tests
        run: cmake --build build --target caracal-test
      - name: Run tests
        run: sudo --preserve-env=CI build/caracal-test --benchmark-warmup-time 0 --benchmark-samples 1
      - name: Compute coverage
        run: gcovr --exclude-unreachable-branches --exclude-throw-branches --exclude apps --exclude extern --exclude tests --output coverage.xml --xml
      - uses: codecov/codecov-action@v3
