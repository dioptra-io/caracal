name: Tests

on: [push]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker image
        run: docker build --tag caracal .
      - name: Test Docker image
        run: docker run caracal --help

  nix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v20
      - uses: cachix/cachix-action@v12
        with:
          name: ${{ secrets.CACHIX_NAME }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Build flake
        run: nix build

  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.conan2/data
          key: tests-${{ runner.os }}-x86_64
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install --yes build-essential cmake gcovr ninja-build python3-pip
          pip3 install "conan>=2.0,<3.0"
      - name: Conan install
        run: conan install . --build=missing -g CMakeToolchain -s compiler=gcc -s compiler.version=10 -s compiler.cppstd=20 -s build_type=Debug
      - name: Configure project
        run: cmake -S . -B build -G Ninja \
          -DCMAKE_BUILD_TYPE=Debug \
          -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake \
          -DCMAKE_CXX_FLAGS="-fprofile-arcs -ftest-coverage -fsanitize=address -fsanitize=undefined" \
          -DWITH_CONAN=ON \
          -DWITH_TESTS=ON
      - name: Build tests
        run: cmake --build build --target caracal-test
      - name: Run tests
        run: sudo --preserve-env=CI build/caracal-test --benchmark-warmup-time 0 --benchmark-samples 1
      - name: Compute coverage
        run: gcovr --exclude-unreachable-branches --exclude-throw-branches --exclude apps --exclude extern --exclude tests --output coverage.xml --xml
      - uses: codecov/codecov-action@v3

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.conan2/data
          key: tests-${{ runner.os }}-x86_64
      - name: Install dependencies
        run: brew install cmake gcovr ninja python3
      - name: Install Conan
        run: pip3 install "conan>=2.0,<3.0"
      - name: Conan install (workaround for bison issue)
        run: |
          conan install . --build=missing -g CMakeToolchain -s compiler=apple-clang -s compiler.version=17 -s compiler.cppstd=20 -s build_type=Debug
      - name: Configure project
        run: cmake -S . -B build -G Ninja \
          -DCMAKE_BUILD_TYPE=Debug \
          -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake \
          -DCMAKE_CXX_FLAGS="-fprofile-arcs -ftest-coverage -fsanitize=address -fsanitize=undefined" \
          -DWITH_CONAN=ON \
          -DWITH_TESTS=ON
      - name: Build tests
        run: cmake --build build --target caracal-test
      - name: Run tests
        run: sudo --preserve-env=CI build/caracal-test --benchmark-warmup-time 0 --benchmark-samples 1
      - name: Compute coverage
        run: gcovr --exclude-unreachable-branches --exclude-throw-branches --exclude apps --exclude extern --exclude tests --output coverage.xml --xml
      - uses: codecov/codecov-action@v3
