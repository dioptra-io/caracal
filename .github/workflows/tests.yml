name: Tests

on: [push]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build --tag caracal .
      - name: Test Docker image
        run: docker run caracal --help

  nix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v20
      - uses: cachix/cachix-action@v12
        with:
          name: ${{ secrets.CACHIX_NAME }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Build flake
        run: nix build

  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Conan Client
        uses: conan-io/setup-conan@v1
        with:
          version: '2.21.0'  # specify Conan 2.x version or omit for latest
          cache_packages: true  # automatically cache Conan packages
      - name: Install dependencies
        run: sudo apt update && sudo apt install --yes build-essential cmake gcovr ninja-build python3-pip
      - name: Install Conan dependencies
        run: conan install . --build=missing -s compiler=gcc -s compiler.version=10 -s compiler.cppstd=20 -s build_type=Release
      - name: Configure project
        run: cmake -S . -B build -G Ninja -DWITH_BINARY=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake
      - name: Build tests
        run: cmake --build build --target caracal-test
      - name: Run tests
        run: sudo --preserve-env=CI build/caracal-test --benchmark-warmup-time 0 --benchmark-samples 1
      - name: Compute coverage
        run: gcovr --exclude-unreachable-branches --exclude-throw-branches --exclude apps --exclude extern --exclude tests --output coverage.xml --xml
      - uses: codecov/codecov-action@v5

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Conan Client
        uses: conan-io/setup-conan@v1
        with:
          version: '2.21.0'
          cache_packages: true
      - name: Install dependencies
        run: brew install cmake gcovr ninja python3
      - name: Install Conan dependencies
        run: conan install . --build=missing -s compiler=apple-clang -s compiler.version=17 -s compiler.cppstd=20 -s build_type=Release
      - name: Configure project
        run: cmake -S . -B build -G Ninja -DWITH_BINARY=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake
      - name: Build tests
        run: cmake --build build --target caracal-test
      - name: Run tests
        run: sudo --preserve-env=CI build/caracal-test --benchmark-warmup-time 0 --benchmark-samples 1
      - name: Compute coverage
        run: gcovr --exclude-unreachable-branches --exclude-throw-branches --exclude apps --exclude extern --exclude tests --output coverage.xml --xml
      - uses: codecov/codecov-action@v5
